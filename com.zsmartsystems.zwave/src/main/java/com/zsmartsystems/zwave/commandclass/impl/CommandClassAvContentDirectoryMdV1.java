/**
 * Copyright (c) 2016-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zwave.commandclass.impl;

import java.io.ByteArrayOutputStream;
import java.util.HashMap;
import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Class to implement the Z-Wave command class <b>COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD</b> version <b>1</b>.
 * <p>
 * Command Class Av Content Directory Md
 * <p>
 * This class provides static methods for processing received messages (message handler) and
 * methods to get a message to send on the Z-Wave network.
 * <p>
 * Command class key is 0x95.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class CommandClassAvContentDirectoryMdV1 {
    private static final Logger logger = LoggerFactory.getLogger(CommandClassAvContentDirectoryMdV1.class);

    /**
     * Integer command class key for COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD
     */
    public final static int COMMAND_CLASS_KEY = 0x95;

    /**
     * Av Content Browse Md Get Command Constant
     */
    public final static int AV_CONTENT_BROWSE_MD_GET = 0x01;
    /**
     * Av Content Browse Md Report Command Constant
     */
    public final static int AV_CONTENT_BROWSE_MD_REPORT = 0x02;
    /**
     * Av Content Browse Md By Letter Get Command Constant
     */
    public final static int AV_CONTENT_BROWSE_MD_BY_LETTER_GET = 0x03;
    /**
     * Av Content Browse Md By Letter Report Command Constant
     */
    public final static int AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT = 0x04;
    /**
     * Av Content Browse Md Child Count Get Command Constant
     */
    public final static int AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET = 0x05;
    /**
     * Av Content Browse Md Child Count Report Command Constant
     */
    public final static int AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT = 0x06;
    /**
     * Av Match Item To Renderer Md Get Command Constant
     */
    public final static int AV_MATCH_ITEM_TO_RENDERER_MD_GET = 0x07;
    /**
     * Av Match Item To Renderer Md Report Command Constant
     */
    public final static int AV_MATCH_ITEM_TO_RENDERER_MD_REPORT = 0x08;


    /**
     * Creates a new message with the AV_CONTENT_BROWSE_MD_GET command.
     * <p>
     * Av Content Browse Md Get
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvContentBrowseMdGet() {
        logger.debug("Creating command message AV_CONTENT_BROWSE_MD_GET version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_CONTENT_BROWSE_MD_GET);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_CONTENT_BROWSE_MD_GET command.
     * <p>
     * Av Content Browse Md Get
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvContentBrowseMdGet(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_CONTENT_BROWSE_MD_REPORT command.
     * <p>
     * Av Content Browse Md Report
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvContentBrowseMdReport() {
        logger.debug("Creating command message AV_CONTENT_BROWSE_MD_REPORT version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_CONTENT_BROWSE_MD_REPORT);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_CONTENT_BROWSE_MD_REPORT command.
     * <p>
     * Av Content Browse Md Report
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvContentBrowseMdReport(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_CONTENT_BROWSE_MD_BY_LETTER_GET command.
     * <p>
     * Av Content Browse Md By Letter Get
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvContentBrowseMdByLetterGet() {
        logger.debug("Creating command message AV_CONTENT_BROWSE_MD_BY_LETTER_GET version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_CONTENT_BROWSE_MD_BY_LETTER_GET);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_CONTENT_BROWSE_MD_BY_LETTER_GET command.
     * <p>
     * Av Content Browse Md By Letter Get
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvContentBrowseMdByLetterGet(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT command.
     * <p>
     * Av Content Browse Md By Letter Report
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvContentBrowseMdByLetterReport() {
        logger.debug("Creating command message AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT command.
     * <p>
     * Av Content Browse Md By Letter Report
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvContentBrowseMdByLetterReport(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET command.
     * <p>
     * Av Content Browse Md Child Count Get
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvContentBrowseMdChildCountGet() {
        logger.debug("Creating command message AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET command.
     * <p>
     * Av Content Browse Md Child Count Get
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvContentBrowseMdChildCountGet(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT command.
     * <p>
     * Av Content Browse Md Child Count Report
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvContentBrowseMdChildCountReport() {
        logger.debug("Creating command message AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT command.
     * <p>
     * Av Content Browse Md Child Count Report
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvContentBrowseMdChildCountReport(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_MATCH_ITEM_TO_RENDERER_MD_GET command.
     * <p>
     * Av Match Item To Renderer Md Get
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvMatchItemToRendererMdGet() {
        logger.debug("Creating command message AV_MATCH_ITEM_TO_RENDERER_MD_GET version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_MATCH_ITEM_TO_RENDERER_MD_GET);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_MATCH_ITEM_TO_RENDERER_MD_GET command.
     * <p>
     * Av Match Item To Renderer Md Get
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvMatchItemToRendererMdGet(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }

    /**
     * Creates a new message with the AV_MATCH_ITEM_TO_RENDERER_MD_REPORT command.
     * <p>
     * Av Match Item To Renderer Md Report
     *
     * @return the {@link byte[]} array with the command to send
     */
    static public byte[] getAvMatchItemToRendererMdReport() {
        logger.debug("Creating command message AV_MATCH_ITEM_TO_RENDERER_MD_REPORT version 1");

        ByteArrayOutputStream outputData = new ByteArrayOutputStream();
        outputData.write(COMMAND_CLASS_KEY);
        outputData.write(AV_MATCH_ITEM_TO_RENDERER_MD_REPORT);

        return outputData.toByteArray();
    }

    /**
     * Processes a received frame with the AV_MATCH_ITEM_TO_RENDERER_MD_REPORT command.
     * <p>
     * Av Match Item To Renderer Md Report
     *
     * @param payload the {@link byte[]} payload data to process
     * @return a {@link Map} of processed response data
     */
    public static Map<String, Object> handleAvMatchItemToRendererMdReport(byte[] payload) {
        // Create our response map
        Map<String, Object> response = new HashMap<String, Object>();

        // Return the map of processed response data;
        return response;
    }
}
